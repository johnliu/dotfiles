#!/usr/bin/python

import os
import subprocess
import shutil


# List of files to be ignored by the script.
ignored_files = ['README.md', 'setup']


def scripts():
  subprocess.call('curl -fLo vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'.split())
  subprocess.call('./osx')


def main():
  dst_dir = os.environ['HOME']
  src_dir = os.getcwd()
  src = os.listdir(src_dir)
  dst = os.listdir(dst_dir)

  print 'Source: %s' % src_dir
  print 'Destination: %s' % dst_dir

  for f in src:
    if f not in ignored_files and not f.startswith('.'):

      # Double check if the user really wants to copy gitconfig.
      if f == 'gitconfig':

        response = None
        while not response:
          print "\nThis gitconfig contains the author's information. "
          print "Are you sure you want to copy it (Y/n):",

          response = raw_input()
          print ''

          if response == 'n' or response == 'Y':
            break

        if response == 'n':
          continue

      fish = False
      if f == 'config':
        if ('.%s' % f) not in dst:
          os.mkdir('%s/.%s' % (dst_dir, f))

        f = 'config/fish'
        fish = True

      # Delete the file if it's already in the destination to overwrite.
      if ('.%s' % f) in dst or fish:
        print 'Removing: .%s' % f

        try:
          os.remove('%s/.%s' % (dst_dir, f))
        except OSError:
          shutil.rmtree('%s/.%s' % (dst_dir, f))

      print 'Creating: .%s' % f
      os.symlink('%s/%s' % (src_dir, f), '%s/.%s' % (dst_dir, f))

  return


if __name__ == '__main__':
  scripts()
  main()
